#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsart
\use_default_options true
\master ../main.lyx
\begin_removed_modules
theorems-ams
\end_removed_modules
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
theorems-ams-chap-bytype
theorems-ams-extended-chap-bytype
algorithm2e
customHeadersFooters
enumitem
logicalmkup
todonotes
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "Libertinus Serif"
\font_sans "default" "Avenir LT Std"
\font_typewriter "default" "Source Code Pro"
\font_math "auto" "default"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 93
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format pdf5
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=black,  frenchlinks=true, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type numerical
\biblio_options entryhead=true, entrykey=false
\biblatex_bibstyle reading
\biblatex_citestyle alphabetic-verb
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.75in
\topmargin 0.75in
\rightmargin 0.75in
\bottommargin 1in
\headsep 0.3in
\footskip 0.3in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side right
\quotes_style danish
\dynamic_quotes 1
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\listings_params "basicstyle={\ttfamily\normalsize},commentstyle={\sffamily},columns=fullflexible,numbers=left,numberstyle={\ttfamily\scriptsize},stepnumber=1,numberblanklines=false,firstline=1,numbersep=9pt,frame=tlb,framexleftmargin=3pt,framextopmargin=2pt,framexbottommargin=1pt,aboveskip={\medskipamount},belowskip={\medskipamount},captionpos=b,floatplacement=tbp,tabsize=4,resetmargins=false,breaklines=true,breakatwhitespace=false,breakautoindent=true,breakindent=0pt,prebreak={...},postbreak={...},extendedchars=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Summary
Training
\end_layout

\begin_deeper
\begin_layout Enumerate
Library
\end_layout

\begin_deeper
\begin_layout Enumerate
stable-baselines 3
\end_layout

\begin_layout Enumerate
underlying: pytorch
\end_layout

\end_deeper
\begin_layout Enumerate
Training routine
\end_layout

\begin_deeper
\begin_layout Enumerate
quick train
\end_layout

\begin_layout Enumerate
train and save
\end_layout

\begin_layout Enumerate
logging with tensor-board
\end_layout

\end_deeper
\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Plain Layout
By further plugging in the concept of partial observation, an acting agent
 conforming to the environment interface 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym.Env
\end_layout

\end_inset

 is obtained.
 The following chapters delineate this process towards the adaptation to
 the interface 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Formulation of the MDP
\end_layout

\begin_layout Standard
A critical framework for the analysis and quantification of agent performance,
 the Markov decision-process (MDP), as described in standard literature
 such as 
\begin_inset CommandInset citation
LatexCommand cite
key "bertsekas_1995,bellman_1957"
literal "false"

\end_inset

, builds upon the discrete control-process as formulated previously by enriching
 it with the notion of step-wise 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
rewards
\end_layout

\end_inset

.
 With the foundation of the formulation of the control-process for the Tetris-ga
me, this section describes the reward structure as used in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Definition of rewards
\end_layout

\begin_layout Definition
The reward
\end_layout

\begin_deeper
\begin_layout Standard
With every evolution from of the system from state 
\begin_inset Formula $y_{\star}$
\end_inset

 to 
\begin_inset Formula $y_{\star+1}$
\end_inset

, a reward 
\begin_inset Formula $r$
\end_inset

 is produced.
 This produces the following augmented illustration based on the first rendition
 of the graph in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:Formulation-of-Control-Process"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\xymatrix{ &  &  & {f\left(\cdots\right)}\ar[d]_{{\text{2. evolve}}}\\
*++[o][F-]{y_{\star}}\ar[rrrr] &  &  &  & *++[o][F-]{y_{\star+1}}\ar@/^{2pc}/[ddl]^{{\text{3. reward}}}\\
\\
 &  & *+[F-]{a_{\star}}\ar[uu]_{{\text{1. apply}}} & *+[F-]{r_{\star}}
}
\]

\end_inset


\end_layout

\begin_layout Standard
Note that no theoretical range for reward 
\begin_inset Formula $r$
\end_inset

 is imposed, i.e., 
\begin_inset Formula $r\in\mathbb{R}^{1}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
The MDP of a Tetris-game thus follows naturally:
\end_layout

\begin_layout Definition
MDP of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The state 
\begin_inset Formula $y$
\end_inset

 and the state-space 
\begin_inset Formula $Y\ni y$
\end_inset

 is provided with Definition 
\begin_inset Note Note
status open

\begin_layout Plain Layout
CROSS_REF
\end_layout

\end_inset

;
\end_layout

\begin_layout Enumerate
The action 
\begin_inset Formula $a$
\end_inset

 and the action-space 
\begin_inset Formula $A\ni a$
\end_inset

 is provided with Definition 
\begin_inset Note Note
status open

\begin_layout Plain Layout
CROSS_REF
\end_layout

\end_inset

;
\end_layout

\begin_layout Enumerate
The transition-probability 
\begin_inset Formula $P$
\end_inset

 is captured by the evolution 
\begin_inset Formula $f$
\end_inset

 in Definition 
\begin_inset Note Note
status open

\begin_layout Plain Layout
CROSS_REF
\end_layout

\end_inset

;
\end_layout

\begin_layout Enumerate
The reward 
\begin_inset Formula $r$
\end_inset

 is specified in the upcoming section 
\begin_inset Note Note
status open

\begin_layout Plain Layout
CROSS_REF
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Formula $4$
\end_inset

-tuple 
\begin_inset Formula $\left(S,A,P,r\right)$
\end_inset

 completes the MDP formulation of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

 in general.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Source of randomness of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Tetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For the game of Tetris as a whole, the only possible source of randomness
 is the generator, as the evolution mechanism of the field is completely
 deterministic.
\end_layout

\begin_layout Standard
In 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

, this source of stochasticity could also be removed by specifying a non-random
 generator as described in previous sections
\begin_inset Note Note
status open

\begin_layout Plain Layout
C_REF
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Reward-Engineering for Tetris
\end_layout

\begin_layout Subsubsection
Episode Termination
\end_layout

\begin_layout Standard
Following standard practices in reward formulation, the component of the
 reward by checking if the episode has elapsed 
\begin_inset Formula $r_{\text{GO}}$
\end_inset

 is defined as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
r_{\text{GO}}\coloneqq\left\{ \begin{alignedat}{2} & 1 & \qquad & \text{if episode not terminated}\\
 & -2 &  & \text{otherwise}
\end{alignedat}
\right.
\]

\end_inset

Similar reward components based on episode status are also utilized in 
\begin_inset CommandInset citation
LatexCommand cite
key "tetris-nuno,uvipen"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
The seemingly innocuous checking against episode termination, or colloquially
 against the state of 
\begin_inset Quotes xld
\end_inset

game-over
\begin_inset Quotes xrd
\end_inset

, is non-trivial, as multiple such implementations exist.
 Again, the reader is encouraged to visit the wiki-page
\begin_inset Foot
status open

\begin_layout Plain Layout
Various Episode-Termination conditions: 
\begin_inset CommandInset href
LatexCommand href
target "https://tetris.wiki/Top_out"
literal "false"

\end_inset


\end_layout

\end_inset

 for more details.
 The mechanism adopted by 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

 is described below:
\end_layout

\begin_layout Definition
Criteria of episode termination in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
An episode is finished if and only if 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
any
\end_layout

\end_inset

 block of the current piece overlaps with an occupied block of the field
 before 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
all
\end_layout

\end_inset

 blocks of the piece are visible.
\end_layout

\begin_layout Standard
Note that this mechanism is inspired by the 
\begin_inset Quotes xld
\end_inset

block-out
\begin_inset Quotes xrd
\end_inset

 variation of described in the web-page nominated above.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Apart from the classical reward criteria of episode-termination of general
 control-problems, another candidate specific to the Tetris-game is described
 in the following section.
\end_layout

\begin_layout Subsubsection
Line-Clears
\end_layout

\begin_layout Standard
Resulting in scores in most Tetris implementations, the line-clears constitute
 another apparent reward candidate 
\begin_inset Formula $r_{\text{LC}}$
\end_inset

.
 The exact mechanism of calculation is provided below:
\end_layout

\begin_layout Definition
Reward by Line-Clears 
\begin_inset Formula $r_{\text{LC}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The reward induced by a line-clear of 
\begin_inset Formula $n$
\end_inset

 (full-)lines is distributed as follows:
\begin_inset Formula 
\begin{equation}
\begin{alignedat}{1}r_{\text{LC}}\left(n\right) & \wasypropto k\left(n\right)\\
 & \coloneqq c\cdot k\left(n\right)
\end{alignedat}
\label{eq:reward-by-line-clear}
\end{equation}

\end_inset

where the function 
\begin_inset Formula $k\left(n\right)$
\end_inset

 for the standard, 
\begin_inset Formula $4$
\end_inset

-block pieces
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
also known as 
\begin_inset Quotes xld
\end_inset

Tetromino
\begin_inset Quotes xrd
\end_inset

 or 
\begin_inset Quotes xld
\end_inset

Tetrimino
\begin_inset Quotes xrd
\end_inset


\end_layout

\end_inset

 only game-play is defined by The Guideline
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Scoring Guideline: 
\begin_inset CommandInset href
LatexCommand href
target "https://tetris.wiki/Scoring"
literal "false"

\end_inset


\end_layout

\end_inset

 as:
\begin_inset Formula 
\[
k\left(n\right)\coloneqq\left\{ \begin{alignedat}{2} & 0 & \qquad & n=0\\
 & 1 &  & n=1\\
 & 3 &  & n=2\\
 & 5 &  & n=3\\
 & 8 &  & n=4\\
 & \text{undefined} &  & \text{otherwise}
\end{alignedat}
\right.
\]

\end_inset


\end_layout

\begin_layout Standard
Implicitly, higher 
\begin_inset Quotes xld
\end_inset

per-cleared-line
\begin_inset Quotes xrd
\end_inset

 score is awarded with more lines cleared at the same time.
 Note that the maximal value for 
\begin_inset Formula $n$
\end_inset

 is 
\begin_inset Formula $4$
\end_inset

, oftentimes referred to as a 
\begin_inset Quotes xld
\end_inset

Tetris-clear
\begin_inset Quotes xrd
\end_inset

, scoring twice as much per line as compared to the case where 
\begin_inset Formula $n$
\end_inset

 is 
\begin_inset Formula $1$
\end_inset

, also known as a 
\begin_inset Quotes xld
\end_inset

single-clear
\begin_inset Quotes xrd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
Proportionality-factor in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
In 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

, the proportionality factor 
\begin_inset Formula $c$
\end_inset

 of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:reward-by-line-clear"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is chosen as:
\begin_inset Formula 
\[
c\coloneqq10\cdot\left(\text{width-of-field}\right)
\]

\end_inset

translating to 
\begin_inset Formula $c\equiv100$
\end_inset

 for the standard field of 
\begin_inset Formula $10$
\end_inset

 columns.
\end_layout

\begin_layout Standard
The addition of the extra multiplicative factor 
\begin_inset Formula $10$
\end_inset

, in contrast to other implementations such as 
\begin_inset CommandInset citation
LatexCommand cite
key "tetris-nuno,uvipen"
literal "false"

\end_inset

, allows immediate identification of any line-clearing when manually monitoring
 the agent: with the reward-component from observing episode termination
 
\begin_inset Formula $r_{\text{GO}}$
\end_inset

 valued at 
\begin_inset Formula $1$
\end_inset

 per non-terminating step, the sum from simply taking 
\begin_inset Formula $10$
\end_inset

 steps would otherwise be indistinguishable from achieving a 
\begin_inset Quotes xld
\end_inset

single
\begin_inset Quotes xrd
\end_inset

 line-clear
\begin_inset Foot
status open

\begin_layout Plain Layout
in other words, 
\begin_inset Formula $1$
\end_inset

 line is cleared
\end_layout

\end_inset

.
 Setting the line-clear rewards 
\begin_inset Formula $r_{\text{LC}}$
\end_inset

 to multiples of 
\begin_inset Formula $100$
\end_inset

 thus eliminates such ambiguity.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Reward in Entirety
\end_layout

\begin_layout Standard
With the two components 
\begin_inset Formula $r_{\text{GO}}$
\end_inset

 and 
\begin_inset Formula $r_{\text{LC}}$
\end_inset

 defined above, one concludes the final reward function of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

:
\end_layout

\begin_layout Definition
Reward 
\begin_inset Formula $r$
\end_inset

 of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
At any time-step 
\begin_inset Formula $t_{'\star}$
\end_inset

, the reward induced by undertaking action 
\begin_inset Formula $a_{\star}$
\end_inset

 is defined as the sum of the reward from checking episode termination 
\begin_inset Formula $r_{\text{GO}}$
\end_inset

 and calculating the line-clear induced score 
\begin_inset Formula $r_{\text{LC}}$
\end_inset

:
\begin_inset Formula 
\[
r\coloneqq r_{\text{GO}}+r_{\text{LC}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
Implementation in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
In general, the reward-mechanism of any control-problem is prototyped with
 the base-class below:
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

# env/reporter/reward/reward.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class RewardFactory:
\end_layout

\begin_layout Plain Layout

    def __init__(self, **kwargs):
\end_layout

\begin_layout Plain Layout

        super().__init__(**kwargs)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def get_reward(self, **kwargs) -> float:
\end_layout

\begin_layout Plain Layout

        pass
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def get_reward_gameover(self, **kwargs) -> float:
\end_layout

\begin_layout Plain Layout

        pass
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The constructor shall initialize individual components of the full reward-mechan
ism, where each such component subsequently follow the following abstraction
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

# env/reporter/reward/component.py 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class _RewardComponent:
\end_layout

\begin_layout Plain Layout

    def __init__(self, **kwargs):
\end_layout

\begin_layout Plain Layout

        super().__init__(**kwargs)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    def get_reward(self, **kwargs) -> Any:
\end_layout

\begin_layout Plain Layout

        pass
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the case of Shetris, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
RewardFactory
\end_layout

\end_inset

 is inherited and initialized with two components: one for the line-clear
 
\begin_inset Formula $r_{\text{LC}}$
\end_inset

 and one for the episode-termination 
\begin_inset Formula $r_{\text{GO}}$
\end_inset

:
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

# env/reporter/reward/reward.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class RewardStandard(RewardFactory):
\end_layout

\begin_layout Plain Layout

    def __init__(self, engine: Engine):
\end_layout

\begin_layout Plain Layout

        self._engine = engine
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        self._lineclear = RewardLineClear(self._engine)
\end_layout

\begin_layout Plain Layout

        self._gameover = RewardGameover(self._engine)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        super().__init__()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The reader is referred to the source-code to inspect the details of the
 implementation of these two components.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Summary of MDP-Formulation
\end_layout

\begin_layout Standard
With the formula for reward calculation 
\begin_inset Formula $r$
\end_inset

, the MDP formulation of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

 is complete at this point.
 The following section introduces the final adaptations required for creating
 a machine-compatible interactive environment for training.
\end_layout

\begin_layout Section
Observation Extraction
\end_layout

\begin_layout Subsection
Context
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset

 library as developed by OpenAI
\begin_inset CommandInset citation
LatexCommand cite
key "gym"
literal "false"

\end_inset

 stipulates a standardized framework for the description of a closed system
 accessible via interaction with a decision-making agent 
\begin_inset Formula $\mathcal{A}$
\end_inset

.
 With the formulation of the MDP, the only missing piece towards the formulation
 of the description of an agent conforming to the interface of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset

 is the notion of partial observation defined as follows.
\end_layout

\begin_layout Subsubsection
Partial Observations
\end_layout

\begin_layout Standard
Instead of the (full) state 
\begin_inset Formula $y$
\end_inset

 of the system, the agent 
\begin_inset Formula $\mathcal{A}$
\end_inset

 perceives the system with 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
observation
\end_layout

\end_inset

 
\begin_inset Formula $x\in\left\{ x_{0},x_{1},x_{2}\cdots\right\} $
\end_inset

 of some observation-space 
\begin_inset Formula $x_{\forall t}\in X$
\end_inset

 and decides upon the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
action
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
cf.
 control-input 
\begin_inset Formula $u$
\end_inset

 in control-theory
\end_layout

\end_inset

 
\begin_inset Formula $a\in\left\{ a_{0},a_{1},a_{2}\cdots\right\} $
\end_inset

 of some action-space 
\begin_inset Formula $a_{\forall t}\in A$
\end_inset

 to apply to the system, which then evolves with the usual internal evolution-dy
namics 
\begin_inset Formula $f\left(\cdots\right)$
\end_inset

, inducing a reward value 
\begin_inset Formula $r\in\left\{ r_{0},r_{1},r_{2}\cdots\right\} $
\end_inset

 of (one-dimensional) real number 
\begin_inset Formula $r_{\forall t}\in\mathbb{R}^{1}$
\end_inset

.
\end_layout

\begin_layout Standard
Microscopically, the now fully augmented illustration below captures the
 evolution of the system from both the system-internal 
\begin_inset Formula $y_{\star}$
\end_inset

 perspective and that of the agent 
\begin_inset Formula $\mathcal{A}$
\end_inset

: 
\begin_inset Formula 
\[
\xymatrix{ &  &  & {f\left(\cdots\right)}\ar[d]_{{\text{2. evolve}}}\\
*++[o][F-]{y_{\star}}\ar@{-->}[dd]_{{\text{0.a. Observe}}}\ar[rrrr] &  &  &  & *++[o][F-]{y_{\star+1}}\ar@/^{2pc}/[ddl]^{{\text{3. reward}}} & \qquad\text{[System Internals]}\\
\\
*+[F-]{x_{\star}}\ar[rr]_{{\text{0.b. decide}}} &  & *+[F-]{a_{\star}}\ar[uu]_{{\text{1. apply}}} & *+[F-]{r_{\star}} &  & \qquad\text{[Agent Perception]}
}
\]

\end_inset


\end_layout

\begin_layout Standard
Given the MDP-Formulation in the previous section, it thus remains to specify
 the process of extracting the observation 
\begin_inset Formula $x$
\end_inset

 of the agent from the system state 
\begin_inset Formula $y$
\end_inset

.
 This following section provides insights into the implementation of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Intuitions
\end_layout

\begin_layout Standard
It does not take a veteran of the Tetris-game to conclude that the field
 on the left is in considerably better shape than that on the right as depicted
 in the comparative illustration 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:good-bad-fields"
plural "false"
caps "false"
noprefix "false"

\end_inset

 below: the uneven columns and the numerous holes of the field both constitute
 undesirable traits, leading to the rejection of the field on the right-hand-sid
e to be rejected as decent game-play.
\size scriptsize

\begin_inset Formula 
\begin{equation}
\begin{bmatrix}\\
\\
\\
\fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \blacksquare & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \blacksquare & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \cdots
\end{bmatrix}\qquad\qquad\qquad\begin{bmatrix}\fullmoon & \fullmoon &  &  & \cdots & \blacksquare & \fullmoon & \fullmoon\\
\fullmoon & \fullmoon & \blacksquare &  & \cdots & \blacksquare & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \blacksquare &  & \cdots & \blacksquare & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \blacksquare & \blacksquare & \fullmoon\\
 & \fullmoon & \blacksquare & \fullmoon & \fullmoon & \fullmoon & \blacksquare & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \fullmoon & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \fullmoon\\
\fullmoon & \fullmoon & \blacksquare & \fullmoon & \blacksquare & \fullmoon & \blacksquare & \fullmoon\\
\blacksquare & \fullmoon & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \blacksquare & \cdots
\end{bmatrix}\label{eq:good-bad-fields}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
These intuitions, while section formalizes such intuitions to accurately
 various define performance measures 
\begin_inset Formula $M$
\end_inset

 to gauge game-plays of Tetris.
\end_layout

\begin_layout Plain Layout
No extreme expertise is required to formulate intuitive heuristics of measuring
 the game-play performance in Tetris: one aims at achieving placing the
 pieces onto the field such that the columns are evenly distributed, not
 stacked too high with few holes.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Field-based Measures
\end_layout

\begin_layout Standard
The fact that the introductory paragraph uses solely the field to gauge
 performance of the game-play conveys the important message that the layout
 of the field alone encapsulates a myriad of indicators for performance.
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

 currently deploys three field-based observations to measure the performance
 of an agent that align with the intuitions delineated above: the height
 
\begin_inset Formula $x_{H}$
\end_inset

, the elevation 
\begin_inset Formula $x_{E}$
\end_inset

 and the number of holes 
\begin_inset Formula $x_{N}$
\end_inset

.
 The following sections introduce them separately:
\end_layout

\begin_layout Subsubsection
Height 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\begin_layout Standard
To begin the investigation of the field, the height-based observation 
\begin_inset Formula $x_{H}$
\end_inset

 is introduced:
\end_layout

\begin_layout Definition
Height 
\begin_inset Formula $x_{H}\left(c\right)$
\end_inset

 of a column 
\begin_inset Formula $c$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The height 
\begin_inset Formula $x_{H}$
\end_inset

 is intuitively defined for one single column 
\begin_inset Formula $c$
\end_inset

 as the maximal vertical coordinate of an occupied box.
\end_layout

\begin_layout Standard
Thus, the range of 
\begin_inset Formula $x_{H}$
\end_inset

 is:
\begin_inset Formula 
\[
x_{H}\left(\forall c\right)\in\left[0;\text{field-height}\right]
\]

\end_inset

translating to 
\begin_inset Formula 
\[
x_{H}\in\texttt{range(21)}\triangleq\left[0;20\right]
\]

\end_inset

for the standard field.
\end_layout

\begin_layout Standard
One observe the following corner cases:
\end_layout

\begin_layout Itemize
\begin_inset Formula $M_{H}\equiv0$
\end_inset

 indicates a completely free column;
\end_layout

\begin_layout Itemize
\begin_inset Formula $M_{H}\equiv20$
\end_inset

 shows occupation of the highest box.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
The height of the column could be readily generalized to extract the observation
 from the field-state 
\begin_inset Formula $y^{F}$
\end_inset

:
\end_layout

\begin_layout Definition
Accessing Height-Observation 
\begin_inset Formula $x^{H}$
\end_inset

 of the field-state 
\begin_inset Formula $y^{F}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
in the raw unprocessed fashion, the height of a field is a vectorized compositio
n of the height of every column:
\begin_inset Formula 
\[
M_{H}\left(f\right)\coloneqq\left[\begin{alignedat}{1}M_{H}\left(c_{0}\right)\\
M_{H}\left(c_{1}\right)\\
\vdots\\
\vdots
\end{alignedat}
\right]\in\left[\texttt{range}\left(21\right)\right]^{\text{n-columns}}
\]

\end_inset

translating to:
\begin_inset Formula 
\[
M_{H}\left(f\right)\coloneqq\left[\begin{alignedat}{1}M_{H}\left(c_{0}\right)\\
M_{H}\left(c_{1}\right)\\
\vdots\\
M_{H}\left(c_{9}\right)
\end{alignedat}
\right]\in\left[\texttt{range}\left(21\right)\right]^{10}
\]

\end_inset

for the standard field of 
\begin_inset Formula $10$
\end_inset

 columns.
\end_layout

\begin_layout Itemize
On the other hand, the vectorized measure could be further compressed into
 a scalar-value via summation.
 For the standard-field, one observes the following 
\begin_inset Quotes xld
\end_inset

compact
\begin_inset Quotes xrd
\end_inset

 field-height:
\begin_inset Formula 
\[
M_{H}^{C}\left(f\right)\coloneqq\mathop{\sum_{i\in\left[0;9\right]}M_{H}\left(c_{i}\right)}\in\left[\texttt{range}\left(21\right)\right]^{10}
\]

\end_inset

Note the range of this compact variant of the field-height must be calculated
 separately:
\begin_inset Formula 
\[
M_{H}\left(f\right)\coloneqq\mathop{\sum_{i\in\left[0;9\right]}M_{H}\left(c_{i}\right)}\in\left[\texttt{range}\left(21\right)\right]^{10}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
Note on desirable 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
As the criteria for deciding if an episode is over correlates directly to
 the 
\begin_inset Quotes xld
\end_inset

height
\begin_inset Quotes xrd
\end_inset

 of the field, an intuitive metric concerns the maximal height.
 Intuitively: higher 
\begin_inset Formula $\text{H}$
\end_inset

-values are more susceptible to termination of an episode and are thus undesirab
le.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Example
Several examples of 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
Given the standard field-size of 
\begin_inset Formula $20\times10$
\end_inset

, the following illustration.
\end_layout

\begin_layout Plain Layout

\size scriptsize
\begin_inset Formula 
\[
\begin{bmatrix} & \fullmoon & \fullmoon &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  & \fullmoon &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  &  &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  &  &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \blacksquare &  & \fullmoon\\
\blacksquare & \fullmoon & \blacksquare & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \blacksquare &  & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \fullmoon & \blacksquare &  & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \blacksquare & \blacksquare &  & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \fullmoon & \blacksquare & \blacksquare & \blacksquare &  & \fullmoon\\
5 & 3 & 4 & 1 & 0 & 3 & 2 & 5 &  & 0
\end{bmatrix}
\]

\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsubsection
Elevation 
\begin_inset Formula $M_{E}$
\end_inset


\end_layout

\begin_layout Definition
Elevation of a column 
\begin_inset Formula $c$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The elevation is defined as the difference in height between two adjacent
 columns.
 Implicitly, given the standard field of 
\begin_inset Formula $10$
\end_inset

 columns, there are 
\begin_inset Formula $9$
\end_inset

 such elevation values:
\begin_inset Formula 
\[
M_{E}\left(c\right)\in\texttt{range(21)}\triangleq\left[0;20\right]
\]

\end_inset

Without loss of generality, 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

 always calculates the the elevation by subtracting the height of the right-hand
-side from that of the left-hand-side.
 In other words, a standard field of 
\begin_inset Formula $10$
\end_inset

 columns each of monotonously decreasing height from left to right has 
\begin_inset Formula $9$
\end_inset

 non-negative elevation-values.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Similar to the height-measure 
\begin_inset Formula $M_{H}$
\end_inset

, the elevation-measure could be extended 
\end_layout

\begin_layout Definition
Extension to a field
\end_layout

\begin_deeper
\begin_layout Standard
The elevation of a field is naturally defined as the elevation of every
 column of the field:
\begin_inset Formula 
\[
M_{E}\left(f\right)\coloneqq\left[\begin{alignedat}{1}M_{E}\left(c_{0}\right)\\
\vdots\\
M_{E}\left(c_{9}\right)
\end{alignedat}
\right]\in\left[\texttt{range}\left(21\right)\right]^{9}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Demonstration
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Add illustration
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\[
\begin{bmatrix} & \fullmoon & \fullmoon &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  & \fullmoon &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  &  &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
 &  &  &  & \cdots &  & \fullmoon & \fullmoon & \fullmoon & \fullmoon\\
\blacksquare & \fullmoon & \fullmoon & \fullmoon & \fullmoon & \fullmoon &  & \blacksquare\\
\blacksquare & \fullmoon & \blacksquare & \fullmoon & \fullmoon & \fullmoon &  & \blacksquare\\
\blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare &  & \blacksquare &  & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \fullmoon & \fullmoon & \blacksquare & \blacksquare & \blacksquare &  & \fullmoon\\
\blacksquare & \blacksquare & \blacksquare & \blacksquare & \fullmoon & \blacksquare & \blacksquare & \blacksquare &  & \fullmoon\\
20 & 19 & 18 &  &  &  & 3 & 2 & 1 & 0
\end{bmatrix}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Holes
\end_layout

\begin_layout Standard
Probably the most dreaded element for the game-play of Tetris are 
\begin_inset Quotes xld
\end_inset

holes
\begin_inset Quotes xrd
\end_inset

 in the field.
 This concept is formalized here:
\end_layout

\begin_layout Definition
Holes of a column
\end_layout

\begin_deeper
\begin_layout Itemize
The Holes of a column 
\begin_inset Formula $c$
\end_inset

 is defined the 
\begin_inset Formula $p_{1}$
\end_inset

 or vertical coordinate of all unoccupied blocks lower than the highest
 occupied block:
\begin_inset Formula 
\[
M_{H}\left(c\right)\in\texttt{range(20)}\triangleq\left[0;19\right]
\]

\end_inset


\end_layout

\begin_layout Itemize
The Number-of-holes of a column 
\begin_inset Formula $c$
\end_inset

 is defined as the number of holes of the column
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Number-of-holes of a field
\begin_inset Formula 
\[
M_{N}\left(c\right)\in\texttt{range(20)}\triangleq\left[0;19\right]
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Two levels of abstraction
\end_layout

\begin_layout Standard
Summing up the three field-based measures enlisted above, one concludes
 the following two different levels of details when measuring the field:
 
\end_layout

\begin_layout Description
column-level the three measures are applied level of accuracy could be on
 the column level, which produces more vectors, each of a narrower range
\end_layout

\begin_layout Description
field-level the measures are applied to the entire field by summing over
 results of every column, producing less vectors, each of a wider range
\end_layout

\begin_layout Standard
The trade-off between number of vectors and range of vectors to track is
 illustrated as follows: the column-level, 
\begin_inset Quotes xld
\end_inset

full
\begin_inset Quotes xrd
\end_inset

 variant is depicted in Table 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="7">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numbers of
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete-range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gym-translation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Height 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;20\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(21)}^{10}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elevation 
\begin_inset Formula $M_{E}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;20\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(21)}^{9}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Holes 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;19\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(20)}^{10}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym.MultiDiscrete([21...21 | 21...21 | 20...20])
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Quotes xld
\end_inset

full
\begin_inset Quotes xrd
\end_inset

, column-level measures
\end_layout

\end_inset


\end_layout

\end_inset

As well as
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="7">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numbers of
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete-range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gym-translation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Height 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;200\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(201)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elevation 
\begin_inset Formula $M_{E}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;180\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(181)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Holes 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;190\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(191)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MultiDiscrete([201, 181, 191])
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
field-level measures
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Beyond the field
\end_layout

\begin_layout Subsubsection
Line-Clears
\end_layout

\begin_layout Standard
As the final objective, the line-clear is defined
\end_layout

\begin_layout Definition
Line-clears 
\begin_inset Formula $M_{LC}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The line-clears are the number of lines cleared for every piece after the
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Field
\end_layout

\end_inset

 processes its freezing.
 The number of line-clears after one move is always within the range of
 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $4$
\end_inset

, including both boundaries.
\end_layout

\begin_layout Enumerate
Despite the fact that every line-clear apparently produces award, the number
 of lines cleared at once leads to different calculations.
 In particular, the 
\begin_inset Quotes xld
\end_inset

per-line
\begin_inset Quotes xrd
\end_inset

 reward increases with higher number of lines cleared.
 This is explained in later sections on reward engineering.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Add reference
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="7">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numbers of
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete-range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gym-translation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lines-cleared 
\begin_inset Formula $M_{C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;4\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(5)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
The piece-id
\end_layout

\begin_layout Standard
Finally, the piece-id also constitutes a viable candidate for observation:
\end_layout

\begin_layout Definition
Piece-id 
\begin_inset Formula $x_{\texttt{pid}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="7">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numbers of
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete-range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gym-translation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;6\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(7)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
This intuitive component seems to nevertheless induce disagreement on its
 relevance as observation.
 In particular, 
\begin_inset CommandInset citation
LatexCommand cite
key "uvipen"
literal "false"

\end_inset

 excludes 
\begin_inset Formula $x^{\texttt{pid}}$
\end_inset

 in the observation completely.
\end_layout

\begin_layout Subsection
Summary of the environment
\end_layout

\begin_layout Subsubsection
Four types of observations
\end_layout

\begin_layout Definition
The four modes of training
\end_layout

\begin_deeper
\begin_layout Standard
With the consideration of varying components of the observation, in particular:
\end_layout

\begin_layout Itemize
each of the three components of the field (the height, the elevation and
 the holes) could either be represented as vectors or added to form one
 sum;
\end_layout

\begin_layout Itemize
the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset

 could be included or discarded in the observation;
\end_layout

\begin_layout Itemize
the number of line-clears is always included.
\end_layout

\begin_layout Standard
Thus, the impact of the various formation of the observation must be investigate
d, specifically, the variations exist in whether to use the compact, summed
 observation of the field, as well as whether to use include the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset

.
 These two binary decisions result in a total of four possible configurations
 of observation.
 The internal representation during training is captured in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Encoding-of-Variations-of-training-modes"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-Code
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Obs: field
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Obs: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rel.
 save-location
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compact
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Included
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
./shetris
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-
\begin_inset Formula $01$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compact
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Omitted
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
./shetris01
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-
\begin_inset Formula $02$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Full
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Included
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
./shetris02
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-
\begin_inset Formula $03$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Full
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Omitted
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
./shetris03
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Encoding-of-Variations-of-training-modes"

\end_inset

Encoding of Variations of Training-Modes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Training type 
\begin_inset Formula $1$
\end_inset

: full observation
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
Add all observation types
\end_layout

\end_inset


\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
The first type of observation first requires the values of the field-metrics
 height, elevation and hole of every column; afterwards, the number of lines-cle
ared as well as the piece-id.
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numbers of
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
discrete-range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gym-translation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Height 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;20\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(21)}^{10}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elevation 
\begin_inset Formula $M_{E}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;20\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(21)}^{9}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Holes 
\begin_inset Formula $M_{H}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;19\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\texttt{range(20)}^{10}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lines-cleared 
\begin_inset Formula $M_{C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;4\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(5)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[0;6\right]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
range(7)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MultiDiscrete([21, 21..., 21, 20, 20..., 20, 5, 7])
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Final Remark
\end_layout

\begin_layout Standard
At this point, the full environment of 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

 conforming to the framework of the interface of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset

 is fully specified.
 This environment class, internally named 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

, is implemented in the module 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
src/rl/shetris/env/shenv.py
\end_layout

\end_inset

 of the source-code repository.
\end_layout

\begin_layout Section
Solution with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
sb3
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Algorithms
\end_layout

\begin_layout Standard
Due to the specific environment properties of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

, not all algorithms of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
SB3
\end_layout

\end_inset

-library are applicable for training.
 In particular, as both the action and the observation-space are of the
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
MultiDiscrete
\end_layout

\end_inset

 type of gym
\begin_inset Note Note
status open

\begin_layout Plain Layout
C_REF
\end_layout

\end_inset

, the following two algorithms are viable:
\end_layout

\begin_layout Itemize
the A2C 
\begin_inset CommandInset citation
LatexCommand cite
key "A2C"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
the improved PPO 
\begin_inset CommandInset citation
LatexCommand cite
key "PPO"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
In addition, for the sake comparative completeness as shown in later sections,
 extra adaptations are made to allow usage of the DQN algorithm 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-original,dqn-nature"
literal "false"

\end_inset

of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
SB3
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
General setups
\end_layout

\begin_layout Note
Implementation in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
In Shetris, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisInfo
\end_layout

\end_inset

-class inherits the general information provider 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
InfoProvider
\end_layout

\end_inset

 for any environment conforming to the interface of 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset

 and provides flexible modifications specific to the parameters of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

 environment.
 In particular, the relative save-location is specified with:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# train/src/rl/result/info.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class ShetrisInfo(InfoProvider):
\end_layout

\begin_layout Plain Layout

    @staticmethod
\end_layout

\begin_layout Plain Layout

    def get_rel_dirs() -> Tuple[str, str]:
\end_layout

\begin_layout Plain Layout

        base = "./shetris<add_modifier>/"
\end_layout

\begin_layout Plain Layout

        tensorboard = os.path.join(base, InfoProvider.tensorboard_subdir)
\end_layout

\begin_layout Plain Layout

        saveload = os.path.join(base, InfoProvider.saveload_subdir)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        return tensorboard, saveload
\end_layout

\begin_layout Plain Layout

    ...
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Specifying-Save-Load-Location-for-shetrisenv"

\end_inset

Specifying Save-Load Location for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

In particular, the information provider for the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

 environment, as first described in Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Specifying-Save-Load-Location-for-shetrisenv"
plural "false"
caps "false"
noprefix "false"

\end_inset

, allows quick selection of the algorithm of choice:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# train/src/rl/result/info.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class ShetrisInfo(InfoProvider):
\end_layout

\begin_layout Plain Layout

    @staticmethod
\end_layout

\begin_layout Plain Layout

    def get_algpol() -> Tuple[Type[BaseAlgorithm], Type[BasePolicy]]:
\end_layout

\begin_layout Plain Layout

        return AlgPolFactory.get_a2c()
\end_layout

\begin_layout Plain Layout

        # return AlgPolFactory.get_ppo()
\end_layout

\begin_layout Plain Layout

        # return AlgPolFactory.get_dqn()
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section
Deep Q-Network
\end_layout

\begin_layout Subsection
Conceptual overview
\end_layout

\begin_layout Standard
Deep Q-Learning is deployed to train the agent for 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

.
 A theoretical summary to the technique is provided below.
 The interested reader is referred to publications such as 
\begin_inset CommandInset citation
LatexCommand cite
key "Q-learning-original,DQN-original,dqn-nature"
literal "false"

\end_inset

 for more details.
\end_layout

\begin_layout Subsubsection
Decision Policy
\end_layout

\begin_layout Standard
The underlying mathematical formulation of Q-Learning targets an optimization
 problem much similar to that of the cost-to-go minimization from classical
 control-theory
\begin_inset CommandInset citation
LatexCommand cite
key "bertsekas_1995"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Based on the introduction to the evolution-model in section 
\begin_inset Note Note
status open

\begin_layout Plain Layout
C_REF
\end_layout

\end_inset

, some further theoretical quantities are readily definable.
 The decision-making of the agent is governed by policy 
\begin_inset Formula $\pi$
\end_inset

: 
\begin_inset Formula 
\[
x_{\star}\overset{\pi}{\longrightarrow}a_{\star}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Q-Values
\end_layout

\begin_layout Definition
Reward-to-go
\end_layout

\begin_deeper
\begin_layout Standard
At any time-step 
\begin_inset Formula $t_{k}$
\end_inset

, the 
\begin_inset Quotes xld
\end_inset

reward-to-go
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This term does not seem to be utilized in standard literature, but the correspon
dence to the 
\begin_inset Quotes xld
\end_inset

cost-to-go
\begin_inset Quotes xrd
\end_inset

 of control-theory begs its usage.
\end_layout

\end_inset


\begin_inset Quotes xrd
\end_inset

, also known as the 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
return
\end_layout

\end_inset

, is defined as the summation of all future rewards until the ending of
 the system evolution at 
\begin_inset Formula $t_{T}$
\end_inset

:
\begin_inset Formula 
\[
R_{t_{k}:t_{T}}\coloneqq\mathop{\sum_{t\in\left[t_{k};t_{T}\right]}\gamma^{t-t_{k}}r_{t}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Optimal 
\begin_inset Formula $Q$
\end_inset

-Values
\end_layout

\begin_deeper
\begin_layout Standard
With the 
\begin_inset Formula $Q$
\end_inset

-value defined as the expected reward-to-go of performing the immediate
 action 
\begin_inset Formula $a_{t}$
\end_inset

 given the current observation 
\begin_inset Formula $x_{t}$
\end_inset

 and followed by the deployment of some policy 
\begin_inset Formula $\pi$
\end_inset

 for all future actions until end of evolution 
\begin_inset Formula $a_{t_{k+1}:t_{T}}$
\end_inset


\begin_inset Formula 
\[
Q_{t_{k}:t_{T}}\coloneqq\mathbb{E}\left[R_{t_{k}:t_{T}}|x_{t},a_{t},\pi\right]
\]

\end_inset

The optimal 
\begin_inset Formula $Q$
\end_inset

-Value 
\begin_inset Formula $Q^{*}$
\end_inset

, defined as:
\begin_inset Formula 
\[
Q^{*}\coloneqq\underset{\pi}{\max}\left\{ Q_{t_{k}:t_{T}}\right\} 
\]

\end_inset

is achieved with the optimal, maximizing policy 
\begin_inset Formula $\pi^{*}$
\end_inset

:
\begin_inset Formula 
\[
\pi^{*}\coloneqq\underset{\pi}{\arg\max}\left\{ Q_{t_{k}:t_{T}}\right\} 
\]

\end_inset

which is subjected to the Bellman's optimality-principle and the (discrete)
 Bellman-Equation, as shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "Q-learning-original,DQN-original"
literal "false"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Connection with classical control
\end_layout

\begin_deeper
\begin_layout Standard
The informed reader might perceive the striking similarity to the 
\begin_inset Quotes xld
\end_inset

cost-to-go
\begin_inset Quotes xrd
\end_inset

 
\begin_inset Formula $J_{k:T}$
\end_inset

 of classical control.
 Indeed, with the flipped optimization and newly coined terminologies, connectio
ns to established setups and theorems in control-theory can be readily establish
ed.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Deep Q-Learning
\end_layout

\begin_layout Standard
Deep Q-Networks (
\begin_inset Flex Code
status open

\begin_layout Plain Layout
DQN
\end_layout

\end_inset

) formalizes the notion of the combination of deep-learning with q-learning
\begin_inset CommandInset citation
LatexCommand cite
key "Q-learning-original"
literal "false"

\end_inset

.
 Specifically, the (potentially) complex mapping of the optimal action-value
 function 
\begin_inset Formula $Q^{*}$
\end_inset

 is approximated with a function 
\begin_inset Formula $Q$
\end_inset

 learnable by a deep-network parameterized on the weights 
\begin_inset Formula $\theta$
\end_inset

:
\begin_inset Formula 
\[
Q\left(x,a;\theta\right)\colonapprox Q^{*}
\]

\end_inset

This framework enables the utilization of the toolkit from deep-learning
 to find the approximating 
\begin_inset Formula $Q$
\end_inset

.
 As the original conceivers pointed out in 
\begin_inset CommandInset citation
LatexCommand cite
key "Q-learning-original,dqn-nature"
literal "false"

\end_inset

, and as existing implementations demonstrated 
\begin_inset CommandInset citation
LatexCommand cite
key "stanford,uvipen,tetris-nuno,sb3"
literal "false"

\end_inset

, the familiar optimization-techniques and loss-functions from evaluating
 deep networks are available for Deep Q-Learning.
\end_layout

\begin_layout Subsubsection
Replay-buffer
\end_layout

\begin_layout Standard
Apart from introducing the fusion of q-learning with deep-networks, Deep
 Q-Learning also deploys a replay-memory of length 
\begin_inset Formula $N$
\end_inset

 chosen 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
a priori
\end_layout

\end_inset

 to hold the 
\begin_inset Quotes xld
\end_inset

experience
\begin_inset Quotes xrd
\end_inset

 of the agent of every evolution-step for later random mini-batch sampling.
\end_layout

\begin_layout Standard
The usage of such experience replay distinguishes Deep Q-Learning from the
 original Q-learning algorithm described above and the Temporal Difference
 (TD) algorithm
\begin_inset CommandInset citation
LatexCommand cite
key "TD-gammon"
literal "false"

\end_inset

.
 In particular, 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-original"
literal "false"

\end_inset

 cites higher sample efficiency and increasing potential for variance explanatio
n due to randomness when sampling from the experience replay.
 Indeed, in the seminal publication of 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-original"
literal "false"

\end_inset

, outstanding results were achieved with such constructions.
\end_layout

\begin_layout Note
Implementation details in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The fixed size limitation of the replay-buffer, which in itself is intentional
 as explained in 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-original"
literal "false"

\end_inset

, requires writing at both ends: insertion at the end and deletion at the
 beginning.
 The excellent choice for such operations is provided by 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Python
\end_layout

\end_inset

's standard library 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
collections.deque
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The choice of this particular data-structure for abstracting the replay-buffer
 is also seen in 
\begin_inset CommandInset citation
LatexCommand cite
key "tetris-nuno,uvipen"
literal "false"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Implementation details
\end_layout

\begin_layout Standard
Based on the algorithm as delineated in 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-original"
literal "false"

\end_inset

, the accompanying official implementation
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The source-code is phrased in the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Lua
\end_layout

\end_inset

 programming-language
\end_layout

\end_inset

 as published in 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-deepmind-implementation"
literal "false"

\end_inset

 and user tuned solutions in 
\begin_inset CommandInset citation
LatexCommand cite
key "uvipen,tetris-nuno,DQN-deepmind-tweaked"
literal "false"

\end_inset

, a Deep Q-Network with 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pytorch
\end_layout

\end_inset

 is separately implemented under the package 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
shetris/train/rl/util/dqn/
\end_layout

\end_inset

, containing, in particular, the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
network.py
\end_layout

\end_inset

 module defining the deep network, as well as the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
model.py
\end_layout

\end_inset

 module offering the definition and training routine of the Deep Q-Learning
 algorithm.
\end_layout

\begin_layout Subsubsection
Hyper-parameters
\end_layout

\begin_layout Standard
Without delving further into the intricacies of the Deep Q-Networks, the
 thesis simply enlists several of the hyper-parameters essential to the
 algorithm.
 These are generally surveyed from reference implementations such as 
\begin_inset CommandInset citation
LatexCommand cite
key "sb3,DQN-deepmind-tweaked,DQN-deepmind-implementation"
literal "false"

\end_inset

.
\end_layout

\begin_layout Solution
The network
\end_layout

\begin_deeper
\begin_layout Standard
A network with 
\begin_inset Formula $1$
\end_inset

 hidden layer with input and output feature-size of 
\begin_inset Formula $64$
\end_inset

 is used.
 In addition, the output-layer has the apparent final size of 
\begin_inset Formula $1$
\end_inset

 for returning the q-value.
\end_layout

\begin_layout Standard
The feature-size for the input-layer directly depends on the specific observatio
n-variant, as indicated by the following table:
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features booktabs="true" islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First layer size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4+1=5$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10+9+10+1+1=31$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variation-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10+9+10+1=30$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
As recommended by 
\begin_inset CommandInset citation
LatexCommand cite
key "what-matters-in-rl"
literal "false"

\end_inset

 and also seen in 
\begin_inset CommandInset citation
LatexCommand cite
key "DQN-deepmind-tweaked,DQN-deepmind-implementation,uvipen,tetris-nuno"
literal "false"

\end_inset

, the Adam's Optimizer and the MSE-Loss is used.
\end_layout

\begin_layout Standard
It shall be note that 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
SB3
\end_layout

\end_inset

 deploys Huber's-Loss within its implementation of DQN instead.
 This difference is further examined later
\begin_inset Note Note
status open

\begin_layout Plain Layout
REF
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Solution
Essential hyper-parameters of DQN in 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $\epsilon$
\end_inset

-greedy-algorithm the initial 
\begin_inset Formula $\epsilon$
\end_inset

-value is to 
\begin_inset Formula $\epsilon_{0}\equiv1$
\end_inset

, decaying linearly to 
\begin_inset Formula $\epsilon_{\text{final}}=10^{-3}$
\end_inset

 after 
\begin_inset Formula $2'000$
\end_inset

 episodes, as seen in 
\begin_inset CommandInset citation
LatexCommand cite
key "uvipen"
literal "false"

\end_inset

;
\end_layout

\begin_layout Description
discount-factor 
\begin_inset Formula $\gamma=0.99$
\end_inset

, conforming to the recommendation of 
\begin_inset CommandInset citation
LatexCommand cite
key "what-matters-in-rl"
literal "false"

\end_inset

;
\end_layout

\begin_layout Description
replay-memory: total step-capacity set to 
\begin_inset Formula $N=30'000$
\end_inset

; pre-record to one-tenth of the capacity, i.e., 
\begin_inset Formula $3'000$
\end_inset

 steps, at the beginning of training, which translates to approximately
 
\begin_inset Formula $150$
\end_inset

 episodes based on empirical evidence as described later
\begin_inset Note Note
status open

\begin_layout Plain Layout
REF
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
Note: the discount-factor is implicitly taken to be the value as agreed
 upon for the default value under general consensus 
\begin_inset Formula $\gamma=0.99$
\end_inset

, instead of further tuning.
 The justification of this is found later in 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Cross-Ref to P5!
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Environment Adaptations
\end_layout

\begin_layout Standard
The necessary adaptations for utilizing this network for the now available
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
gym
\end_layout

\end_inset

 environment are enlisted below:
\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Enumerate
The observation, which should be drawn from the entire history of state
 
\begin_inset Formula $y$
\end_inset

 and action 
\begin_inset Formula $a$
\end_inset

, is, as explained before, only dependent only the current state 
\begin_inset Formula $y$
\end_inset

.
 In particular, the state-observation, the number of lines cleared and the
 piece-id, are all only dependent on one state snapshot, the state after
 applying the action.
\end_layout

\begin_layout Enumerate
All pairs of (action, observation)-pairs must be created, in particular,
 given the specific movement setup of the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ShetrisEnv
\end_layout

\end_inset

, the rotational configurations of every piece can be reduced: in particular,
 the 
\begin_inset Quotes qld
\end_inset

O
\begin_inset Quotes qrd
\end_inset

-piece has 
\begin_inset Formula $1$
\end_inset

 rotational-config, then 
\begin_inset Note Note
status open

\begin_layout Plain Layout
comes pid 1, 2, 3 with 2 configs and the last three of 4 configs.
\end_layout

\end_inset

 Note that this monotonously increasing amount of rotational configurations
 with respect to the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset

 is not a coincidence: in fact, this is the sorting criteria when the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset

s are sorted to begin with.
 Thus, much 
\begin_inset Quotes xld
\end_inset

wasteful
\begin_inset Quotes xrd
\end_inset

 configurations can be saved: in particular, the O-piece only needs to be
 inspected for its only rotational configuration instead of 
\begin_inset Formula $4$
\end_inset

, effectively shrinking the action-space to 
\begin_inset Formula $\nicefrac{1}{4}$
\end_inset

.
 The reporter in the module 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
shetris/env/reporter/combi.py
\end_layout

\end_inset

 implements the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
_Helper
\end_layout

\end_inset

-class with 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# train/src/rl/shetris/env/reporter/combi.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class _Helper:
\end_layout

\begin_layout Plain Layout

    def do_for_all_actions(self, get_job_func: Callable) -> None
\end_layout

\begin_layout Plain Layout

    ...
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 executes a function returned by the passed in variable 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
get_job_func
\end_layout

\end_inset

 on the reduced action-space.
 Another critical usage of this 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
_Helper
\end_layout

\end_inset

-class is for the implementation of the Genetic-Algorithm based solution
 seen in the next chapter.
\end_layout

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Training setups
\end_layout

\begin_layout Standard
Each of the four observation-variants as listed previously is trained for
 the DQN as described above.
 However, due to the direct interaction with the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pytorch
\end_layout

\end_inset

-library, the observation must be output into its array-type 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
torch.Tensor
\end_layout

\end_inset

.
 Passing 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
False
\end_layout

\end_inset

 to the keyword-argument 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
use_np
\end_layout

\end_inset

 when constructing the Observation-Factory allows this transition.
 The following constructing syntax performs the type conversion:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# train/src/rl/shetris/env/reporter/reporter.py
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

class Reporter:
\end_layout

\begin_layout Plain Layout

    def __init__(self, engine: Engine):
\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

        self.obs_factory = ObsStandard(
\end_layout

\begin_layout Plain Layout

            self.engine,
\end_layout

\begin_layout Plain Layout

            use_compact_field=<set_as_needed>,
\end_layout

\begin_layout Plain Layout

            use_pid=<set_as_needed>,
\end_layout

\begin_layout Plain Layout

            # set to False to output torch.Tensor
\end_layout

\begin_layout Plain Layout

            use_np=True,
\end_layout

\begin_layout Plain Layout

        )
\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\end_inset


\end_layout

\begin_layout Section
Hard-coded Evolution logic
\end_layout

\begin_layout Standard
To conclude this chapter on the investigation of various agents, this section
 provides an alternative solution requiring no training.
 Originally studied and published in 
\begin_inset CommandInset citation
LatexCommand cite
key "tetris-best-ai"
literal "false"

\end_inset

, this agent chooses the optimizer-action 
\begin_inset Formula $a^{*}$
\end_inset

 that maximizes a hard-coded reward-function at every step.
 The specifics are given below:
\end_layout

\begin_layout Subsection
Agent specification
\end_layout

\begin_layout Definition
The reward-function 
\begin_inset Formula $r$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The reward function is calculated with:
\begin_inset Formula 
\[
r\coloneqq\left[\begin{alignedat}{1}-0.51\\
-0.18\\
-0.35\\
+0.76
\end{alignedat}
\right]\circ\left[\begin{alignedat}{1}x^{H}\\
x^{E}\\
x^{N}\\
x^{L}
\end{alignedat}
\right]
\]

\end_inset

where the observation components are defined as previously.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Thus follows the agent 
\begin_inset Formula $\mathcal{A}$
\end_inset

:
\end_layout

\begin_layout Definition
Agent 
\begin_inset Formula $\mathcal{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
At every step, the Agent applies the optimal action 
\begin_inset Formula $a^{*}$
\end_inset

 in the sense of maximizing the reward 
\begin_inset Formula $r$
\end_inset

 as defined above.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Adaptation details
\end_layout

\begin_deeper
\begin_layout Standard
The original work in 
\begin_inset CommandInset citation
LatexCommand cite
key "tetris-best-ai"
literal "false"

\end_inset

 operates with 
\begin_inset Formula $1$
\end_inset

-length preview of the piece-id.
 
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
Shetris
\end_layout

\end_inset

 currently disallows such previewing, which, in turn, requires slight adaptation
s to the search process for the optimal action 
\begin_inset Formula $a^{*}$
\end_inset

.
 Note that this agent is also incorporated as reference in 
\begin_inset CommandInset citation
LatexCommand cite
key "stanford"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Also, the observation must be configured in Variation
\begin_inset Formula $1$
\end_inset

, i.e., with the compact field-observation, excluding the 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
pid
\end_layout

\end_inset

.
 Finally, the observation must output the type 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
numpy.ndarray
\end_layout

\end_inset


\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
in particular, the observation-factory is thus limited to:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

        self.obs_factory = ObsStandard(
\end_layout

\begin_layout Plain Layout

            self.engine,
\end_layout

\begin_layout Plain Layout

            use_compact_field=True,
\end_layout

\begin_layout Plain Layout

            use_pid=False,
\end_layout

\begin_layout Plain Layout

            # set to False only for manual DQN-training
\end_layout

\begin_layout Plain Layout

            use_np=False
\end_layout

\begin_layout Plain Layout

        )
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Quick Analysis
\end_layout

\begin_layout Standard
Some initial statements can be made regarding the agent as described above:
\end_layout

\begin_layout Enumerate
the hard-coded nature of the reward-to-action process eliminates the process
 of training entirely, rendering this agent suitable as a 
\begin_inset Quotes xld
\end_inset

real-time
\begin_inset Quotes xrd
\end_inset

 comparative criteria for evaluating trained agents as described previously
\end_layout

\begin_layout Enumerate
On the other hand, 
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status collapsed

\begin_layout Section
Idea
\end_layout

\begin_layout Subsection
Solving Tetris
\end_layout

\begin_layout Solution
Naive-Solution
\end_layout

\begin_deeper
\begin_layout Plain Layout
Given the small dimension of 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 as seen previously, finding the optimal 
\begin_inset Formula $\mathbf{Q}^{*}$
\end_inset

 could be solved in a brute-force manner: iterate through all possible 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 given a specific piece 
\begin_inset Formula $\mathbf{P}$
\end_inset

 and find the optimal 
\begin_inset Formula $\mathbf{Q}^{*}$
\end_inset

 with respect to the chosen measure 
\begin_inset Formula $C$
\end_inset

, i.e.:
\begin_inset Formula 
\[
\mathbf{Q}^{*}\stackrel{\mathbb{T}}{\coloneqq}\arg\min C_{|\mathbf{Q}}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Problem
Deficiencies of the Naive-Solution
\end_layout

\begin_deeper
\begin_layout Plain Layout
The Naive-Solution, though simple to implement, presents various aspects
 of possible improvement, with the two most prominent ones being:
\end_layout

\begin_layout Enumerate
Greediness: no look-ahead possible.
 For example, the Naive-Solution will opt for an immediately available double-cl
ear rather than building for a future tetris-clear.
 In essence, its greediness, while allowing local (only up to its next step
 
\begin_inset Formula $n+1$
\end_inset

) optimality, prevents it from achieving it globally with respect to the
 game-score measure 
\begin_inset Formula $C_{3}$
\end_inset

,
\end_layout

\begin_layout Enumerate
Repetitiveness: different play-fields frequently display some extent of
 commonalities, the optimal solution to which is intuitively assumed to
 possess similarities as well
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Based purely on heuristics, might require stringent proof
\end_layout

\end_inset

.
 As an extreme examples, even for completely (horizontally) symmetric fields,
 the tactic 
\begin_inset Formula $\mathbb{T_{\text{new}}}$
\end_inset

 will have to be calculated from scratch, whereas apparent reuse of 
\begin_inset Formula $\mathbb{T_{\text{old}}}$
\end_inset

 is presumably possible.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Solution
Machine-Solution
\end_layout

\begin_deeper
\begin_layout Plain Layout
As of time of writing, no specifics are known pertaining to determining
 a machine-based solution.
 For the purpose of this specific paper, techniques from Reinforcement-Learning
 are proposed.
 The framework above revolving around optimizing the tactic 
\begin_inset Formula $\mathbb{T}$
\end_inset

 on a chosen measure 
\begin_inset Formula $C$
\end_inset

 under the backdrop of the discrete evolution-problem is expected to be
 utilizable with minor tweaking if necessary.
 Above all, it remains to be established:
\end_layout

\begin_layout Enumerate
an appropriate measure 
\begin_inset Formula $C$
\end_inset

 that, as mentioned previously, takes multiple sub-measures into account,
 possibly by forming some sort of 
\begin_inset Quotes xld
\end_inset

super-position
\begin_inset Quotes xrd
\end_inset

,
\end_layout

\begin_layout Enumerate
an optimization-strategy on finding 
\begin_inset Formula $\mathbb{T}$
\end_inset

 that does not rely on the greedy-principle and recognizes repetitive, common
 structures among different Tetris-fields 
\begin_inset Formula $S$
\end_inset

 for efficient calculation.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Baselines
\end_layout

\begin_layout Subsubsection
Intuitive baselines
\end_layout

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
The optimal 
\begin_inset Quotes xld
\end_inset

tactic
\begin_inset Quotes xrd
\end_inset


\end_layout

\begin_layout Note
The domain of 
\begin_inset Formula $\mathbf{Q}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
For any given 
\begin_inset Formula $\mathbf{P}$
\end_inset

, its corresponding domain of 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 is obviously countable.
 Indeed, as seen in Appendix-2, its dimension is at most 
\begin_inset Formula $34$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
The optimal tactic 
\begin_inset Formula $\mathbb{T}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
An optimal tactic 
\begin_inset Formula $\mathbb{T}$
\end_inset

 shall provide the 
\begin_inset Formula $\mathbf{Q}_{n+1}$
\end_inset

 that is optimal with respect to a specific 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
measure
\end_layout

\end_inset

 
\begin_inset Formula $C$
\end_inset

, a variety of which is conceivable.
 Some of the more representative ones are listed as follows.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Measures for evaluating 
\begin_inset Formula $\mathbb{T}$
\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula $C_{1}\coloneqq$
\end_inset

 (number of unoccupied squares)
\end_layout

\begin_deeper
\begin_layout Enumerate
probably the most naive definition of a score,
\end_layout

\begin_layout Enumerate
easy to implement: 
\begin_inset Formula $C_{1}\coloneqq\text{\#}\left(S_{i,j}\equiv0\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula $C_{2}\coloneqq$
\end_inset

 (the number of 
\begin_inset Quotes xld
\end_inset

accessible
\begin_inset Quotes xrd
\end_inset

 squares)
\end_layout

\begin_deeper
\begin_layout Enumerate
more involved: builds upon the previous, naive 
\begin_inset Formula $C_{1}$
\end_inset

 while also taking into account those unoccupied squares with occupied squares
 above them,
\end_layout

\begin_layout Enumerate
must also take into consideration advanced moves such as 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
tucks
\end_layout

\end_inset

 and 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
spins
\end_layout

\end_inset

: the enabling of such maneuvers renders seemingly inaccessible squares
 accessible
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://tetris.wiki/T-Spin
\end_layout

\end_inset


\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula $C_{3}\coloneqq$
\end_inset

 the game-score
\end_layout

\begin_deeper
\begin_layout Enumerate
recently regularized by a detailed guideline on Tetris-wiki
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://tetris.wiki/Scoring
\end_layout

\end_inset


\end_layout

\end_inset

,
\end_layout

\begin_layout Enumerate
as an excerpt, points scored from line-clears induced by 
\begin_inset Formula $1$
\end_inset

 line (single), 
\begin_inset Formula $2$
\end_inset

 lines (double), 
\begin_inset Formula $3$
\end_inset

 lines (triple) and 
\begin_inset Formula $4$
\end_inset

 lines (
\begin_inset Quotes xld
\end_inset

tetris
\begin_inset Quotes xrd
\end_inset

) are in the proportion of 
\begin_inset Formula $1:3:5:8$
\end_inset

.
 Implicitly, a 
\begin_inset Quotes xld
\end_inset

tetris
\begin_inset Quotes xrd
\end_inset

-clear, i.e., a 
\begin_inset Formula $4$
\end_inset

-line-clear, is, for example, worth twice as much as 
\begin_inset Formula $4$
\end_inset

 separate single-clears and 
\begin_inset Formula $\nicefrac{1}{3}$
\end_inset

 more than 
\begin_inset Formula $2$
\end_inset

 separate double-clears.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Note
The final score 
\begin_inset Formula $C$
\end_inset


\end_layout

\begin_deeper
\begin_layout Plain Layout
Though 
\begin_inset Formula $C_{3}$
\end_inset

 seems to be the apparently more advanced scoring measure, the other two
 are nevertheless required as tie-breakers, in case different control-input
 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 evaluates to the same score.
 One might imagine the final measure 
\begin_inset Formula $C$
\end_inset

 as the aggregate of various 
\begin_inset Formula $C_{i}$
\end_inset

, where the exact manner of such an aggregation requires further analysis.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Separator plain
\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
